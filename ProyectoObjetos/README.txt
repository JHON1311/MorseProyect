Juan Diego González García

isc.juandgg@gmail.com

ProyectoObjetos

Abrir el proyecto MorseProyect con la plataforma de desarrollo NetBeans y ejecutar la clase principal.

Este proyecto, se desarrolla en 3 clases (Cuadrado,Cubo y ObjectsProyect), en la clase Cuadrado tiene la funcion de clase padre, en ella se crea una variable entera de tipo publico para que la clase hija pueda acceder a ella de nombre "lado", para esta variable se crean sus respectivos metodos de "set" y "get", a demas de un metodo "calcularAreaCuadrado" de tipo publico que retornara una cadena, dentro de ella se crea una variable entera llamada "r" a la que se le asigna el valor de la variable "lado" por "lado" para obtener el area del cuadrado, y se retorna el resultado con un mensaje dando a conocer el area del cuadrado.
y un ultimo metodo llamado "calcularPerimetroCuadrado" que de igual manera retorna una cadena, en ella se crea una variable entera llamada "r" la cual va a alojar el resultado de la multiplicacion de 4 (num. de aristas) por la variable "lado" para obtener el perimetro del cuadrado, este se retorna junto con un mensaje indicando que el perimetro del cuadrado es el resultyado de "r".

En la clase "Cubo" especificamos la palabra reservada extends para indicar que esta clase se extiende de otra clase y el nombre de la clase padre, teniendo public class Cubo extends Cuadrado, en ella se crean solo 2 metodos, uno de ellos es "calcularVolumen" en la cual se crea una variable entera llamada "aux" teniendo el resultado de multiplicar el "lado" por "lado" por "lado" , recordando que la variable no esta declarada en esta, pero esta declarada en la clase padre y puede utilizarla, despues de ello se retorna una cadena con el mensaje de el resultado del volumen.
En el segundo metodo llamado "calcularPerimetroCubo" retornando una cadena, se crea una variable entera llamada "r" a la cual se le asigna el valor de multiplicar el numero de aristas (12) por la medida de el lado, este resultado se retorna junto con una cadena la cual indica que el resultado del perimetro del cubo es el valor de "r".

Ya que tenemos listas las clases que necesitamos, haciendo el uso de la herencia, en la clase "ObjectsProyect" la cual es la clase principal a ejecutar, se declaran variables de tipo entera llamadas "selection" y "lado", asi como una de tipo cadena llamada "entry", dentro del metodo main, se crea una variable de tipo "Cubo" (la clase hija, antes creada) con el nombre de "cub", se crea un ciclo do while que se va a estar ejecutando mientras que el usuario no desida salir, en ella se manda un mensaje de bienvenida y solicitando la medida de un lado, con ayuda de la variable de tipo Scanner, se obtiene lo que digito el usuario, 
convirtiendolo a entero y a la variable "cub" con el metodo setLado se manda el dato obtenido (el metodo setLado es de la clase Cuadrado pero al extenderse en la clase Cubo este mismo hereda esos metodos pudiendo hacer uso de ellos), ya que guardamos esta variable, se procede a realizar otro cilo do while que se va a estar ejecutando mientras que el usuario no digite o escoja la opcion de cancelar que lo lleva al menu anterior o la opcion de salir.
En este ciclo se manda por consola un mensaje dando a conocer la medida del lado ingresado por el usuario obteniendolo con la ayuda del metodo getLado() de la clase Cuadrado, al igual que las diferentes opciones de calculo, cancelar y de salida, se obtiene el resultado de la seleccion guardandolo en la variable "selection" antes creada y se crea un switch con esta variable mostrando por consola los resultados de, en caso de seleccionar la primera opcion "calcular el area de un cuadrado" se manda llamar el metodo clacularAreaCuadrado() de la variable "cub" que retorna el resultado del mismo.
En caso de escoger la opcion 2 calcular el perimetro de un cuadrado, se realiza lo mismo, solo que ahora conel metodo calcularPerimetroCuadrado(), en la opcion 3, calcular el volumen de un cubo se manda llamar el metodo calcularVolumen de la misma variable "cub", en la opcion 4 calcular el perimetro del cubo, se realiza lo mismo que en las anteriores pero ahora con el metodo calcularPerimetroCubo().

al crear la variable cub a partir de la clase Cubo, se puede hacer uso de los diferentes metodos que esta clase contiene al igual que los metodos y variables de su clase padre, por ello, podemos acceder a estos metodos con una misma variable.
